"""empty message

Revision ID: 027676275482
Revises: f2a59cdbe8fa
Create Date: 2023-03-01 12:23:05.618561

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '027676275482'
down_revision = 'f2a59cdbe8fa'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('wg_logistics',
    sa.Column('logistic_id', sa.Integer(), nullable=False),
    sa.Column('sender', sa.Integer(), nullable=False),
    sa.Column('receiver', sa.Integer(), nullable=False),
    sa.Column('send_address', sa.String(length=255), nullable=True),
    sa.Column('recv_address', sa.String(length=255), nullable=True),
    sa.Column('date_added', sa.DateTime(), nullable=True),
    sa.Column('send_date', sa.Date(), nullable=True),
    sa.Column('receive_date', sa.Date(), nullable=True),
    sa.Column('package_type', sa.String(length=31), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('is_visible', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['receiver'], ['wg_users.user_id'], ),
    sa.ForeignKeyConstraint(['sender'], ['wg_users.user_id'], ),
    sa.PrimaryKeyConstraint('logistic_id')
    )
    op.create_table('wg_polls',
    sa.Column('poll_id', sa.Integer(), nullable=False),
    sa.Column('lister', sa.Integer(), nullable=False),
    sa.Column('question', sa.String(length=255), nullable=True),
    sa.Column('date_added', sa.DateTime(), nullable=True),
    sa.Column('choices', postgresql.ARRAY(sa.String(length=31)), nullable=True),
    sa.Column('results', postgresql.ARRAY(sa.Integer()), nullable=True),
    sa.Column('votes', sa.Integer(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('end_time', sa.Time(), nullable=True),
    sa.Column('is_visible', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['lister'], ['wg_users.user_id'], ),
    sa.PrimaryKeyConstraint('poll_id')
    )
    op.create_table('wg_requests',
    sa.Column('request_id', sa.Integer(), nullable=False),
    sa.Column('lister', sa.Integer(), nullable=False),
    sa.Column('is_for', sa.Integer(), nullable=False),
    sa.Column('question', sa.String(length=255), nullable=True),
    sa.Column('date_added', sa.DateTime(), nullable=True),
    sa.Column('choices', postgresql.ARRAY(sa.String(length=80)), nullable=True),
    sa.Column('answer', sa.Integer(), nullable=True),
    sa.Column('is_visible', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['is_for'], ['wg_users.user_id'], ),
    sa.ForeignKeyConstraint(['lister'], ['wg_users.user_id'], ),
    sa.PrimaryKeyConstraint('request_id')
    )
    op.create_table('wg_tasks',
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('lister', sa.Integer(), nullable=False),
    sa.Column('is_for', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=80), nullable=True),
    sa.Column('project', sa.String(length=80), nullable=True),
    sa.Column('date_added', sa.DateTime(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=80), nullable=True),
    sa.Column('is_visible', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['is_for'], ['wg_users.user_id'], ),
    sa.ForeignKeyConstraint(['lister'], ['wg_users.user_id'], ),
    sa.PrimaryKeyConstraint('task_id')
    )
    op.create_table('wg_classifieds',
    sa.Column('classified_id', sa.Integer(), nullable=False),
    sa.Column('lister', sa.Integer(), nullable=False),
    sa.Column('pree_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('category', sa.String(length=80), nullable=True),
    sa.Column('typeOf', sa.String(length=80), nullable=True),
    sa.Column('metrics', sa.String(length=31), nullable=True),
    sa.Column('location', sa.String(length=80), nullable=True),
    sa.Column('salary', sa.String(length=31), nullable=True),
    sa.Column('company', sa.String(length=80), nullable=True),
    sa.Column('description', postgresql.ARRAY(sa.String(length=1023)), nullable=True),
    sa.Column('subtopics', postgresql.ARRAY(sa.String(length=80)), nullable=True),
    sa.Column('subcontent', postgresql.ARRAY(sa.String(length=1023)), nullable=True),
    sa.Column('qualifications', postgresql.ARRAY(sa.String(length=255)), nullable=True),
    sa.Column('benefits', postgresql.ARRAY(sa.String(length=255)), nullable=True),
    sa.Column('skills', postgresql.ARRAY(sa.String(length=255)), nullable=True),
    sa.Column('questions', postgresql.ARRAY(sa.String(length=255)), nullable=True),
    sa.Column('responses', postgresql.ARRAY(sa.String(length=80)), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('is_visible', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['lister'], ['wg_users.user_id'], ),
    sa.ForeignKeyConstraint(['pree_id'], ['wg_prees.pree_id'], ),
    sa.PrimaryKeyConstraint('classified_id')
    )
    op.create_table('wg_events',
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('lister', sa.Integer(), nullable=False),
    sa.Column('pree_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('host', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('category', sa.String(length=80), nullable=True),
    sa.Column('typeOf', sa.String(length=80), nullable=True),
    sa.Column('metrics', sa.String(length=31), nullable=True),
    sa.Column('where', sa.String(length=80), nullable=True),
    sa.Column('status', sa.String(length=80), nullable=True),
    sa.Column('dates', postgresql.ARRAY(sa.Date()), nullable=True),
    sa.Column('start_times', postgresql.ARRAY(sa.Time()), nullable=True),
    sa.Column('end_times', postgresql.ARRAY(sa.Time()), nullable=True),
    sa.Column('attendees', sa.Integer(), nullable=True),
    sa.Column('confirmations', sa.Integer(), nullable=True),
    sa.Column('denials', sa.Integer(), nullable=True),
    sa.Column('tickets', postgresql.ARRAY(sa.String(length=31)), nullable=True),
    sa.Column('costs', postgresql.ARRAY(sa.Integer()), nullable=True),
    sa.Column('personnel_ids', postgresql.ARRAY(sa.Integer()), nullable=True),
    sa.Column('personnel', postgresql.ARRAY(sa.String(length=80)), nullable=True),
    sa.Column('attractions', postgresql.ARRAY(sa.String(length=80)), nullable=True),
    sa.Column('is_visible', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['lister'], ['wg_users.user_id'], ),
    sa.ForeignKeyConstraint(['pree_id'], ['wg_prees.pree_id'], ),
    sa.PrimaryKeyConstraint('event_id')
    )
    op.create_table('wg_volunteers',
    sa.Column('volunteer_id', sa.Integer(), nullable=False),
    sa.Column('lister', sa.Integer(), nullable=False),
    sa.Column('pree_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('category', sa.String(length=80), nullable=True),
    sa.Column('venue', sa.String(length=80), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=1023), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('start_time', sa.Time(), nullable=True),
    sa.Column('end_time', sa.Time(), nullable=True),
    sa.Column('contributions', postgresql.ARRAY(sa.String(length=80)), nullable=True),
    sa.Column('is_visible', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['lister'], ['wg_users.user_id'], ),
    sa.ForeignKeyConstraint(['pree_id'], ['wg_prees.pree_id'], ),
    sa.PrimaryKeyConstraint('volunteer_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('wg_volunteers')
    op.drop_table('wg_events')
    op.drop_table('wg_classifieds')
    op.drop_table('wg_tasks')
    op.drop_table('wg_requests')
    op.drop_table('wg_polls')
    op.drop_table('wg_logistics')
    # ### end Alembic commands ###
